{
	 "description":"ADME_CONSUMER_COMPLAINT_EDR",
	 "sqlStatements": [
	  {
		"sql"      	:"
select
	CAST (from_unixtime(unix_timestamp(a.accept_date ,
	'yyyy-MM'),
	'yyyyMM') AS integer) AS mo_key,
	cast (from_unixtime(unix_timestamp(a.accept_date ,
	'yyyy-MM-dd HH'),
	'HH') as integer) as hour_key,
	CASE
		WHEN a.COMPLAIN_ID = '' THEN CAST(NULL AS string)
		ELSE a.COMPLAIN_ID
	end as INTRCN_EVT_UUID,
	CAST(NULL AS string) AS INTRCN_EVT_CD,
	CAST(NULL AS string) AS PARENT_INTRCN_EVT_CD,
	CAST(a.ACCEPT_DATE AS timestamp) AS INTRCN_EVT_START_DT,
	CAST(a.end_date AS timestamp) AS INTRCN_EVT_END_DT,
	CAST(NULL AS timestamp) AS REC_PROCESS_DT,
	CAST(NULL AS integer) AS CALL_CENTRE_KEY,
	CAST(NULL AS string) AS CALL_CENTRE_CD,
	'I' as INTRCN_DRCTN_CD,
	CAST(b.ACCT_SRVC_INSTANCE_KEY AS decimal(27,
	0)) AS ACCT_SRVC_INSTANCE_KEY,
	CASE
		WHEN a.ISDN = '' THEN CAST(NULL AS string)
		ELSE a.ISDN
	end as SERVICE_NBR,
	CAST(b.ACCT_KEY AS decimal(27,
	0)) AS ACCT_KEY,
	CAST(b.BILLABLE_ACCT_KEY AS decimal(27,
	0)) AS BILLABLE_ACCT_KEY,
	CAST(b.CUST_KEY AS decimal(27,
	0)) AS CUST_KEY,
	CASE
		WHEN b.CUST_TYP_CD = '' THEN CAST(NULL AS string)
		ELSE b.CUST_TYP_CD
	end as CUST_TYP_CD,
	CASE
		WHEN b.NTWK_QOS_GRP_CD = '' THEN CAST(NULL AS string)
		ELSE b.NTWK_QOS_GRP_CD
	end as NTWK_QOS_GRP_CD,
	CAST(b.ACTIVATION_DT AS timestamp) AS ACCT_ACTIVATION_DT,
	CAST(b.CBS_ACTIVATION_DT AS timestamp) AS ACCT_CBS_ACTIVATION_DT,
	CASE
		WHEN b.LFCYCL_STAT_CD = '' THEN CAST(NULL AS string)
		ELSE b.LFCYCL_STAT_CD
	end as ACCT_LFCYCL_STAT_CD,
	CAST(b.ACTIVATION_DT AS timestamp) AS SRVC_ACTIVATION_DT,
	CAST(b.CBS_ACTIVATION_DT AS timestamp) AS SRVC_CBS_ACTIVATION_DT,
	CASE
		WHEN b.LFCYCL_STAT_CD = '' THEN CAST(NULL AS string)
		ELSE b.LFCYCL_STAT_CD
	end as SRVC_LFCYCL_STAT_CD,
	CAST(b.PROD_LINE_KEY AS integer) AS PROD_LINE_KEY,
	CAST(b.USAGE_PLAN_KEY AS bigint) AS USAGE_PLAN_KEY,
	CASE
		WHEN b.USAGE_PLAN_CD = '' THEN CAST(NULL AS string)
		ELSE b.USAGE_PLAN_CD
	end as USAGE_PLAN_CD,
	CASE
		WHEN b.USAGE_PLAN_TYP_CD = '' THEN CAST(NULL AS string)
		ELSE b.USAGE_PLAN_TYP_CD
	end as USAGE_PLAN_TYP_CD,
	CAST(b.ACQSTN_DT AS timestamp) AS ACQSTN_DT,
	CAST(b.ACQSTN_BSNS_OUTLET_KEY AS bigint) AS ACQSTN_BSNS_OUTLET_KEY,
	CASE
		WHEN b.ACQSTN_BSNS_OUTLET_CD = '' THEN CAST(NULL AS string)
		ELSE b.ACQSTN_BSNS_OUTLET_CD
	end as ACQSTN_BSNS_OUTLET_CD,
	CAST(b.CRM_OFFER_KEY AS bigint) AS CRM_OFFER_KEY,
	CASE
		WHEN b.CRM_OFFER_CD = '' THEN CAST(NULL AS string)
		ELSE b.CRM_OFFER_CD
	end as CRM_OFFER_CD,
	CAST(NULL AS string) AS BILL_GRP_CD,
	CAST(NULL AS bigint) AS BILL_CYCLE_KEY,
	CAST(NULL AS bigint) AS CELL_KEY,
	CAST(NULL AS string) AS CELL_CD,
	CAST(NULL AS bigint) AS CELL_SITE_KEY,
	CAST(NULL AS string) AS CELL_SITE_CD,
	CAST(NULL AS bigint) AS NTWK_MGNT_CENTRE_KEY,
	CAST(NULL AS string) AS NTWK_MGNT_CENTRE_CD,
	CAST(b.BSNS_RGN_KEY AS bigint) AS BSNS_RGN_KEY,
	CASE
		WHEN b.BSNS_RGN_CD = '' THEN CAST(NULL AS string)
		ELSE b.BSNS_RGN_CD
	end as BSNS_RGN_CD,
	CAST(b.BSNS_CLUSTER_KEY AS bigint) AS BSNS_CLUSTER_KEY,
	CASE
		WHEN b.BSNS_CLUSTER_CD = '' THEN CAST(NULL AS string)
		ELSE b.BSNS_CLUSTER_CD
	end as BSNS_CLUSTER_CD,
	CAST(b.BSNS_MINICLUSTER_KEY AS bigint) AS BSNS_MINICLUSTER_KEY,
	CASE
		WHEN b.BSNS_MINICLUSTER_CD = '' THEN CAST(NULL AS string)
		ELSE b.BSNS_MINICLUSTER_CD
	end as BSNS_MINICLUSTER_CD,
	CAST(b.GEO_CNTRY_KEY AS bigint) AS GEO_CNTRY_KEY,
	CASE
		WHEN b.GEO_CNTRY_CD = '' THEN CAST(NULL AS string)
		ELSE b.GEO_CNTRY_CD
	end as GEO_CNTRY_CD,
	CAST(b.GEO_STATE_KEY AS bigint) AS GEO_STATE_KEY,
	CASE
		WHEN b.GEO_STATE_CD = '' THEN CAST(NULL AS string)
		ELSE b.GEO_STATE_CD
	end as GEO_STATE_CD,
	CAST(b.GEO_DSTRCT_KEY AS bigint) AS GEO_DSTRCT_KEY,
	CASE
		WHEN b.GEO_DSTRCT_CD = '' THEN CAST(NULL AS string)
		ELSE b.GEO_DSTRCT_CD
	end as GEO_DSTRCT_CD,
	CAST(b.GEO_CITY_KEY AS bigint) AS GEO_CITY_KEY,
	CASE
		WHEN b.geo_city_cd = '' THEN CAST(NULL AS string)
		ELSE b.geo_city_cd
	end as GEO_CITY_CD,
	CAST(NULL AS string) AS CHNL_TYP_CD,
	CASE
		WHEN a.COMPLAIN_TYPE = 'C' THEN 'TRBL_TCKT'
		WHEN a.COMPLAIN_TYPE = 'F' THEN 'SRVC_ORD'
		else null
	END as EVT_CLASS_CD,
	CAST(NULL AS string) AS EVT_CTGRY_CD,
	CAST(NULL AS string) AS EVT_TYP_CD,
	case
		when a.priority = 1 then 'P1'
		when a.priority is null then 'P3'
		else null
	end as PRIORITY_CD,
	CAST(NULL AS bigint) AS INTRCN_DOCKET_NBR,
	CAST(NULL AS timestamp) AS RESOLUTION_TARGET_DT,
	CAST(NULL AS string) AS INTRCN_TITLE,
	CASE
		WHEN a.COMP_CONTENT = '' THEN CAST(NULL AS string)
		ELSE a.COMP_CONTENT
	end as INTRCN_CASE_DSCR,
	CASE
		WHEN a.REASON_ID = '' THEN CAST(NULL AS string)
		ELSE a.REASON_ID
	end as INTRCN_REASON_CD,
	CAST(NULL AS string) AS INTRCN_GOAL_DSCR,
	case
		when a.status = '3' then 'Successful'
		else 'Unsuccessful'
	end as INTRCN_RESULT_TYP_CD,
	CAST(NULL AS string) AS INTRCN_RESULT_REASON_CD,
	CASE
		WHEN a.RESULT_CONTENT = '' THEN CAST(NULL AS string)
		ELSE a.RESULT_CONTENT
	end as INTRACN_OUTCOME_NOTES,
	CASE
		WHEN a.ACCEPT_USER = '' THEN CAST(NULL AS string)
		ELSE a.ACCEPT_USER
	end as INTRACN_AGENT_CD,
	CASE
		WHEN a.END_USER = '' THEN CAST(NULL AS string)
		ELSE a.END_USER
	end as LAST_INTRACN_AGENT_CD,
	CAST(a.END_DATE AS timestamp) AS LAST_INTRACN_DT,
	CASE
		WHEN a.PROCESS_USER = '' THEN CAST(NULL AS string)
		ELSE a.PROCESS_USER
	end as DOCKET_PROCESSED_BY,
	CASE
		WHEN c.iddep = '' THEN CAST(NULL AS string)
		ELSE c.iddep
	end as DOCKET_PROCESSED_DEPT_CD,
	CAST(a.PROCESS_DATE AS timestamp) AS DOCKET_PROCESSED_DT,
	CAST(NULL AS bigint) AS CC_QUEUE_DRTN,
	CAST(NULL AS timestamp) AS CC_CALL_START_DT,
	CAST(NULL AS timestamp) AS CC_CALL_END_DT,
	CAST(NULL AS bigint) AS CC_AGENT_INTRACN_DRTN,
	CAST(NULL AS bigint) AS CC_INTRACN_HOLD_DRTN,
	CAST(NULL AS string) AS CC_ABNORMAL_DISCONNECTION_IND,
	CAST(NULL AS string) AS CC_ACTVTY_RECORDING_ID,
	CASE
		WHEN a.CALL_BACK_REQUIRE = '' THEN CAST(NULL AS string)
		ELSE a.CALL_BACK_REQUIRE
	end as CALLBACK_REQ_IND,
	CASE
		WHEN a.CALL_BACK_USER = '' THEN CAST(NULL AS string)
		ELSE a.CALL_BACK_USER
	end as CALLBACK_AGENT_CD,
	CASE
		WHEN c.iddep = '' THEN CAST(NULL AS string)
		ELSE c.iddep
	end as CALLBACK_DEPT_CD,
	CAST(a.CALL_BACK_DATE AS timestamp) AS FIRST_CALLBACK_DT,
	CAST(NULL AS bigint) AS CALLBACK_INTRACN_DRTN,
	CASE
		WHEN a.CALL_BACK_CONTENT = '' THEN CAST(NULL AS string)
		ELSE a.CALL_BACK_CONTENT
	end as CALLBACK_OUTCOME_NOTES,
	CAST(a.CALL_BACK_DATE AS timestamp) AS LAST_CALLBACK_DT,
	CAST(NULL AS timestamp) AS NEXT_SCHEDULE_CALLBACK_DT,
	CAST(NULL AS string) AS CALLBACK_RESULT_TYP_CD,
	CAST(NULL AS string) AS CALLBACK_RESULT_REASON_CD,
	CAST(NULL AS integer) AS CALLBACK_CNT,
	CAST(NULL AS bigint) AS TOT_CALLBACK_INTRACN_DRTN,
	CAST(NULL AS timestamp) AS ESCALATION_DT,
	CAST(NULL AS string) AS ESCALATION_TYP,
	CAST(NULL AS string) AS ESCALATION_REASON_CD,
	CAST(NULL AS string) AS ESCALATION_DEPT_CD,
	CAST(NULL AS string) AS ESCALATION_DSCR,
	CAST(NULL AS string) AS ESCALATED_BY,
	CAST(NULL AS string) AS ESCALATED_TO,
	CAST(NULL AS integer) AS ESCALATION_CNT,
	CAST(NULL AS string) AS REF_SRVC_ORDER_CD,
	CAST(NULL AS timestamp) AS REF_SRVC_ORDER_START_DT,
	CAST(NULL AS timestamp) AS REF_SRVC_ORDER_STOP_DT,
	CAST(NULL AS string) AS REF_SRVC_ORDER_STAT_CD,
	CASE
		WHEN a.STATUS = '' THEN CAST(NULL AS string)
		ELSE a.STATUS
	end as STAT_CD,
	CAST(NULL AS timestamp) AS LAST_STAT_CHANGED_DT,
	case
		when a.status in ('-1', '-2') then '-2'
		when a.status = '0' then '1'
		when a.status in ('1', '2', '5') then '2'
		when a.status = '3' then '4'
		else null
	end as LFCYCL_STAT_CD,
	CAST(NULL AS string) AS STAT_RSN_CD,
	CAST(NULL AS integer) AS REOPEN_CNT,
	CAST(NULL AS timestamp) AS LAST_REOPEN_DT,
	CAST(a.PROCESS_DATE AS timestamp) AS RESOLVED_DT,
	CASE
		WHEN a.PROCESS_USER = '' THEN CAST(NULL AS string)
		ELSE a.PROCESS_USER
	end as RESOLVED_BY,
	CASE
		WHEN c.iddep = '' THEN CAST(NULL AS string)
		ELSE c.iddep
	end as RESOLVED_DEPT_CD,
	CAST(NULL AS string) AS SOLUTION_NOTE,
	case
		when a.satisfied_level in (3, 4, 5) then '1'
		when a.satisfied_level in (1, 2) then '0'
		else null
	end as ICE_FEDBACK_OPTION_IND,
	CAST(a.FEEDBACK_DATE AS timestamp) AS ICE_FEDBACK_DT,
	CAST(NULL AS string) AS ICE_FEDBACK_NOTE,
	CAST(NULL AS integer) AS ICE_OVERALL_RATING_SCORE,
	CAST(a.SATISFIED_LEVEL AS decimal(8,2)) AS CUST_SATISFACTION_LEVEL,
	CAST(NULL AS string) AS CHRG_HEAD_CD,
	CAST(NULL AS string) AS CHRG_TYP_CD,
	CAST(NULL AS decimal(27,
	8)) AS CHRG_AMT,
	CAST((nvl(a.compens_amount,
	0)+ nvl(a.scratch_values,
	0)) AS decimal(27,
	8)) AS DEBIT_ADJ_AMT,
	CAST(NULL AS decimal(27,
	8)) AS CREDIT_ADJ_AMT,
	CAST(NULL AS decimal(27,
	8)) AS TAX_AMT,
	CAST(NULL AS decimal(27,
	8)) AS BLLD_AMT,
	CAST(NULL AS decimal(27,
	8)) AS RVN_AMT,
	CAST(NULL AS decimal(27,
	8)) AS DISPUTE_AMT,
	CAST(NULL AS string) AS CHRG_WAIVED_IND,
	CAST(b.LOYALTY_RANK_SCORE AS decimal(12,
	4)) AS LOYALTY_RANK_SCORE,
	CAST(b.LOYALTY_SCORE_DT AS timestamp) AS LOYALTY_SCORE_DT,
	CAST(b.CREDIT_SCORE AS decimal(12,
	4)) AS CREDIT_SCORE,
	CASE
		WHEN b.CREDIT_CLASS_CD = '' THEN CAST(NULL AS string)
		ELSE b.CREDIT_CLASS_CD
	end as CREDIT_CLASS_CD,
	CASE
		WHEN b.CREDIT_SCORE_METHOD = '' THEN CAST(NULL AS string)
		ELSE b.CREDIT_SCORE_METHOD
	end as CREDIT_SCORE_METHOD,
	CAST(b.CREDIT_SCORE_DT AS timestamp) AS CREDIT_SCORE_DT,
	CAST(b.RISK_IND AS integer) AS RISK_IND,
	CAST(NULL AS string) AS ACCT_SEGMENT_CD,
	CAST(NULL AS string) AS ACCT_SEGMENT_DT,
	CAST(NULL AS string) AS CMPGN_CD,
	CAST(24 AS bigint) AS SRC_SYS_KEY,
	'BILLING_GOLD' as SRC_SYS_CD,
	CURRENT_TIMESTAMP() as LOAD_DT,
	'1' as CURR_IND,
	cast(1 as integer) as WRHS_ID
from
	mbf_datalake.complain a
left join mbf_bigdata.admr_account_service b on
	a.isdn = b.service_nbr
	and b.day_key = '$day_key'
left join mbf_datalake.department c on
	a.dep_id = c.dep_id
where
	a.day_key = '$day_key'
",
		"tempTable"  : "ADME_CONSUMER_COMPLAINT_EDR_tmp",
		"countSourceRecord":"1"
	  }   	  
	]
}