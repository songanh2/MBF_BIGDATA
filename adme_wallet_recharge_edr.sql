{
	 "description":"ADME_WALLET_RECHARGE_EDR",
	 "sqlStatements": [
		
	 	  {
		"sql"      	:"
				SELECT 
				*

				FROM 
					(

					SELECT * ,
						ROW_NUMBER() OVER(PARTITION BY AA.STT,AA.CALL_TYPE,AA.CALLING_ISDN_STD,AA.CALL_STA_TIME, AA.FTP_FILENAME ORDER BY ABS(UNIX_TIMESTAMP(AA.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss') - UNIX_TIMESTAMP(DD.DATE_TIME_USE,'dd/MM/yyyy HH:mm:ss')),UNIX_TIMESTAMP(AA.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss') - UNIX_TIMESTAMP(DD.DATE_TIME_USE,'dd/MM/yyyy HH:mm:ss')) AS ROW_NUM_1,							
						ROW_NUMBER() OVER(PARTITION BY AA.STT,AA.CALL_TYPE,AA.CALLING_ISDN_STD,AA.CALL_STA_TIME, AA.FTP_FILENAME ORDER BY ABS(UNIX_TIMESTAMP(AA.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss') - UNIX_TIMESTAMP(CC.NGAY_THANG_NAM,'dd/MM/yyyy HH:mm:ss')),UNIX_TIMESTAMP(AA.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss') - UNIX_TIMESTAMP(CC.NGAY_THANG_NAM,'dd/MM/yyyy HH:mm:ss')) AS ROW_NUM_2
					
					FROM 
					MBF_STAGE.STG_CDR_IN_ENRICH AA
					LEFT JOIN
					(
						SELECT  ACC_REF , AMOUNT, concat_ws(' ',date_use,time_use) as DATE_TIME_USE, SCNUM 
						FROM MBF_DATALAKE.SCRATCH AA
						LEFT JOIN MBF_DATALAKE.SCRATCH_PROFILE BB ON AA.SCRPREF = BB.RI
						WHERE DAY_KEY = '$day_key'
					) DD 
					ON (CASE WHEN LENGTH(NVL(AA.ORG_CALL_ID,'')) <> 0
						THEN
							CASE
								WHEN SUBSTR(AA.ORG_CALL_ID, 1, 4) = '0001'
								THEN
									SUBSTR(AA.ORG_CALL_ID, 5)
								ELSE
									CAST(CAST(AA.ORG_CALL_ID AS INT) AS STRING)
							END
						ELSE AA.CALLING_ISDN_STD 	
					   END) = DD.ACC_REF AND DD.AMOUNT = CAST(SPLIT(AA.SCRATCH_VALUE,'-')[0] AS BIGINT) 
					AND AA.CALL_TYPE = 179 
					LEFT JOIN 
					(
						SELECT SERIAL_FROM FROM_SERIAL, SERIAL_TO TO_SERIAL,'THE_CAO' AS SCR_TYPE FROM MBF_DATALAKE.SCR_THE_CAO WHERE CAST(DAY_KEY AS INTEGER) <= CAST('$day_key' AS INTEGER) 
						UNION ALL
						SELECT SERIAL_FROM FROM_SERIAL, SERIAL_TO TO_SERIAL,'MA_THE' AS SCR_TYPE FROM MBF_DATALAKE.SCR_MA_THE WHERE CAST(DAY_KEY AS INTEGER) <= CAST('$day_key' AS INTEGER)
					)BB ON ((CAST(AA.SCRATCH_NUMBER AS BIGINT) >= CAST(BB.FROM_SERIAL AS BIGINT) AND CAST(AA.SCRATCH_NUMBER AS BIGINT)  <= CAST(BB.TO_SERIAL AS BIGINT) AND AA.call_type IN (193, 209))
					 OR (AA.CALL_TYPE = 179 AND CAST(DD.SCNUM AS BIGINT) >= CAST(BB.FROM_SERIAL AS BIGINT) AND CAST(DD.SCNUM AS BIGINT) <= CAST(BB.TO_SERIAL AS BIGINT))) and split(AA.scratch_value,'-')[0] > 0
					LEFT JOIN 
					(SELECT  SO_MUA, SO_BAN, NGAY_THANG_NAM FROM  MBF_DATALAKE.EVS WHERE DAY_KEY = '$day_key') CC 
					 ON (CASE WHEN LENGTH(NVL(AA.ORG_CALL_ID,'')) <> 0
						THEN
							CASE
								WHEN SUBSTR(AA.ORG_CALL_ID, 1, 4) = '0001'
								THEN
									SUBSTR(AA.ORG_CALL_ID, 5)
								ELSE
									CAST(CAST(AA.ORG_CALL_ID AS INT) AS STRING)
							END
						ELSE AA.CALLING_ISDN_STD 	
					   END) = CC.SO_MUA AND AA.call_type =320 and split(AA.scratch_value,'-')[0] > 0 
					WHERE  
					AA.DAY_KEY = '$day_key' AND ((AA.CALL_TYPE IN (164,464,360) and aa.call_type_ind IN ('UNKNOWN','OTHER'))
													OR (AA.CALL_TYPE = 415 AND Aa.CALL_TYPE_IND = 'OTHER' AND ((AA.TRANSACTION_DESCRIPTION LIKE 'UT%' AND SPLIT(AA.SCRATCH_VALUE,'-')[0] > 0) OR AA.TRANSACTION_DESCRIPTION LIKE '%HU%'))
													OR (AA.call_type IN (193, 209,179,320) AND Aa.CALL_TYPE_IND = 'OTHER' and split(AA.scratch_value,'-')[0] > 0))
					) A 
				WHERE 
				(A.FROM_SERIAL IS NULL AND A.SO_MUA IS NULL AND A.SCNUM IS NULL) 
				OR (A.ROW_NUM_1 = 1 AND A.FROM_SERIAL IS NOT NULL AND A.SCNUM IS NOT NULL) 
				OR (A.ROW_NUM_1 = 1 AND A.SCNUM IS NOT NULL AND A.FROM_SERIAL IS NULL)
				OR (A.SO_MUA IS NOT NULL AND A.ROW_NUM_2 = 1)
				OR (A.FROM_SERIAL IS NOT NULL AND A.SCNUM IS NULL) 
				 ",
		"tempTable"  : "WALLET_RECHARGE_TMP",
		"countSourceRecord":"0"
	  },   	  
	 {
		"sql"      	:"
						SELECT 
						CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss'),'yyyyMM') AS INTEGER) 		AS MO_KEY,
						CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss'),'HH') AS INTEGER) 			AS HOUR_KEY,
						CAST(A.STT AS STRING) 									AS UUID,
						(CASE WHEN A.CALL_TYPE = 179 THEN NVL(A.SCNUM, A.SCRATCH_NUMBER) 
							ELSE A.SCRATCH_NUMBER END)										AS RCHRG_TXN_REF,
						(CASE WHEN A.CALL_TYPE IN ('193','209','179') THEN 'CASH_CARD' 
							   WHEN A.CALL_TYPE = '320' THEN 'ETOPUP'
							   ELSE 'UNKNOWN' END) 								AS RCHRG_TYP_CD,
						CAST(NULL AS STRING) 									AS RCHRG_EVT_CD,
						CAST(from_unixtime(unix_timestamp(A.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss'),'yyyy-MM-dd HH:mm:ss') AS TIMESTAMP) 						AS RCHRG_EVT_DT,
						CAST(NULL AS TIMESTAMP) 								AS BLLG_START_DT,
						A.FTP_FILENAME 											AS FILE_NAME,
						CAST(NULL AS TIMESTAMP) 								AS FILE_DT,
						CAST(NULL AS STRING) 									AS FILE_PREFIX_CD,
						CAST(NULL AS TIMESTAMP) 								AS REC_PROCESS_DT,
						CAST(NULL AS STRING) 									AS SWITCH_CD,
						C.ACCT_SRVC_INSTANCE_KEY 								AS ACCT_SRVC_INSTANCE_KEY,
						(CASE WHEN LENGTH(NVL(A.ORG_CALL_ID,'')) <> 0
							THEN
								CASE
									WHEN SUBSTR(A.ORG_CALL_ID, 1, 4) = '0001'
									THEN
										SUBSTR(A.ORG_CALL_ID, 5)
									ELSE
										CAST(CAST(A.ORG_CALL_ID AS INT) AS STRING)
								END
							ELSE A.CALLING_ISDN_STD 	
						 END) 										AS SERVICE_NBR,
						C.ACCT_KEY 												AS ACCT_KEY,
						C.BILLABLE_ACCT_KEY 									AS BILLABLE_ACCT_KEY,
						C.CUST_KEY 												AS CUST_KEY,
						C.CUST_TYP_CD 											AS CUST_TYP_CD,
						C.NTWK_QOS_GRP_CD 										AS NTWK_QOS_GRP_CD,
						C.ACTIVATION_DT 										AS ACCT_ACTIVATION_DT,
						C.CBS_ACTIVATION_DT 									AS ACCT_CBS_ACTIVATION_DT,
						C.LFCYCL_STAT_CD 										AS ACCT_LFCYCL_STAT_CD,
						C.ACTIVATION_DT 										AS SRVC_ACTIVATION_DT,
						C.CBS_ACTIVATION_DT 									AS SRVC_CBS_ACTIVATION_DT,
						C.LFCYCL_STAT_CD 										AS SRVC_LFCYCL_STAT_CD,
						C.PROD_LINE_KEY 										AS PROD_LINE_KEY,
						C.USAGE_PLAN_KEY 										AS USAGE_PLAN_KEY,
						C.USAGE_PLAN_CD 										AS USAGE_PLAN_CD,
						C.USAGE_PLAN_TYP_CD 									AS USAGE_PLAN_TYP_CD,
						C.CRM_OFFER_KEY 										AS OFFER_KEY,
						C.CRM_OFFER_CD 											AS OFFER_CD,
						CAST(NULL AS decimal(20,0)) 							AS PROD_KEY,
						CAST(NULL AS STRING) 									AS PROD_CD,
						'RECHARGE' 												AS EVT_CLASS_CD,
						(CASE WHEN A.CALL_TYPE IN (193, 209, 320,179) THEN 'RCHRG_TOPUP'
							  WHEN A.CALL_TYPE = 360 THEN 'RCHRG_BAL_TRNSFR'
							  WHEN A.CALL_TYPE = 415 THEN 'RCHRG_ECB'
							  ELSE 'UNKNOWN'
						END )													AS EVT_CTGRY_CD,
						(CASE
							WHEN A.CALL_TYPE IN ('193', '209','179') THEN
								(CASE WHEN A.FROM_SERIAL IS NOT NULL AND A.SCR_TYPE = 'THE_CAO' THEN 'RCHRG_TOPUP_VCHR'
									  WHEN A.FROM_SERIAL IS NOT NULL AND A.SCR_TYPE = 'MA_THE' THEN 'RCHRG_TOPUP_CODE' ELSE 'UNKNOWN' END)
							WHEN A.CALL_TYPE = '320' then (
								CASE WHEN LENGTH (TRANSLATE (A.SO_BAN, '_0123456789', '_')) = 0 THEN 'RCHRG_TOPUP_EZ' 
								ELSE 'RCHRG_TOPUP_AIRTIME' END)
							WHEN A.CALL_TYPE = '360' then 'RCHRG_BAL_TRNSFEREE'
							WHEN A.CALL_TYPE = 415 AND TRANSACTION_DESCRIPTION LIKE 'UT%' AND SPLIT(A.SCRATCH_VALUE,'-')[0] > 0 THEN 'RCHRG_ECB_LOAN'
							WHEN A.CALL_TYPE = 415 AND TRANSACTION_DESCRIPTION LIKE '%HU%' THEN 'RCHRG_ECB_PYMT'
							ELSE 'UNKNOWN'
						END)													AS EVT_TYP_CD,
						CAST(NULL AS STRING) 									AS RCHRG_BAL_TRNSFR_TYP_CD,
						C.ACQSTN_BSNS_OUTLET_KEY							 	AS RCHRG_BSNS_OUTLET_KEY,
						C.ACQSTN_BSNS_OUTLET_CD 								AS RCHRG_BSNS_OUTLET_CD,
						CAST(NULL AS STRING) 									AS VCHR_BATCH_NBR,
						(CASE WHEN A.CALL_TYPE = 179 THEN NVL(A.SCNUM, A.SCRATCH_NUMBER) 
							ELSE A.SCRATCH_NUMBER END)							AS VCHR_SRL_NBR,
						CAST(NULL AS STRING) 									AS CARD_GRP_INFO,
						CAST(NULL AS STRING) 									AS VCHR_PRTNR_INFO,
						C.SERVICE_NBR 											AS OTHER_SERVICE_NBR,
						CAST(NULL AS STRING) 									AS LAPU_SERVICE_NBR,
						(CASE
								WHEN A.CALL_TYPE = 209 THEN 'USSD'
								WHEN A.CALL_TYPE = 193 THEN 'VIS'
								WHEN A.CALL_TYPE = 179 THEN 'MOB_APPS'
								ELSE CAST(NULL AS STRING) 
						END)													AS RCHRG_CHNL_TYP_CD,
						CAST(NULL AS STRING) 									AS RCHRG_CHNL_CD,
						'VND' 													AS CRNCY_CD,
						CAST(NULL AS INTEGER) 									AS RCHRG_RANK,
						CAST(NULL AS decimal(20,0))								AS LIFE_TIME_RCHRG_CNT,
						CAST(
							(CASE 
								WHEN A.CALL_TYPE = 415  AND A.TRANSACTION_DESCRIPTION LIKE '%HU%' THEN A.CREDIT_CHARGED - SPLIT(A.TRANSACTION_DESCRIPTION,'_')[2]
								ELSE SPLIT(A.SCRATCH_VALUE ,'-')[0] 
						END) AS decimal(27,8)) 									AS FACE_VALUE_AMT,
						CAST(NULL AS decimal(27,8)) 							AS RCHRG_PROMO_AMT,
						CAST(NULL AS STRING) 									AS RCHRG_PROMO_CD,
						CAST(NULL AS decimal(27,8)) 							AS RCHRG_AMT,
						CAST((
							CASE WHEN A.CALL_TYPE = 415 AND A.TRANSACTION_DESCRIPTION LIKE '%HU%' THEN SPLIT(A.TRANSACTION_DESCRIPTION,'_')[2]
							ELSE 0
						END) AS decimal(27,8)) 									AS RVN_AMT,
						CAST(NULL AS STRING) 									AS RVN_CHRG_HEAD_CD,
						CAST(NULL AS decimal(27,8)) 							AS TAX_AMT,
						'0' 													AS PYMT_IND,
						CAST(NULL AS TIMESTAMP) 								AS PYMT_DT,
						CAST(NULL AS decimal(27,8))								AS PYMT_AMT,
						CAST(NULL AS STRING) 									AS PYMT_EVT_CD,
						CAST(NULL AS STRING) 									AS PYMT_TXN_REF,
						CAST(NULL AS STRING) 									AS PYMT_INFO,
						CAST(NULL AS decimal(27,8)) 							AS LOAN_AMT,
						CAST(NULL AS STRING) 									AS LOAN_TXN_REF,
						CAST(NULL AS TIMESTAMP) 								AS LOAN_DT,
						CAST(NULL AS decimal(27,8)) 							AS LOAN_REPAY_AMT,
						CAST(NULL AS decimal(27,8)) 							AS CHRGBL_FEE_AMT,
						CAST(NULL AS decimal(27,8)) 							AS LOAN_ACCT_BAL_AMT,
						CAST(NULL AS decimal(27,8)) 							AS AGENT_COMMISSION_AMT,
						CAST(A.CREDIT_BEFORE_ADJUSTMENT AS decimal(27,8))		AS MAIN_ACCT_BAL_AMT_BEFR_RCHRG,
						CAST(A.CREDIT_REMAINING 	AS decimal(27,8))			AS MAIN_ACCT_BAL_AMT_AFTR_RCHRG,
						CAST((CASE WHEN A.ACC_PROFILE not LIKE 'TS%'
							THEN SPLIT(A.SCRATCH_VALUE ,'-')[0]  ELSE 0 
						END) AS decimal(27,8))									AS PRPD_MAIN_ACCT_RCHRG_AMT,
						CAST((CASE WHEN A.ACC_PROFILE LIKE 'TS%'
							THEN  SPLIT(A.SCRATCH_VALUE ,'-')[0] ELSE 0 
						END) AS decimal(27,8))									AS PSPD_MAIN_ACCT_RCHRG_AMT,
						CAST(NULL AS STRING) 									AS STV_RCHRG_IND,
						CAST(NULL AS TIMESTAMP) 								AS ACCT_EXPR_DT_BEFR,
						CAST(NULL AS TIMESTAMP) 								AS ACCT_EXPR_DT_AFTR,
						(CASE WHEN A.SCRATCH_VALUE IS NOT NULL THEN '1' ELSE '0' END ) AS RCHRG_STAT_CD,
						A.CAUSERECCLOSE 										AS RCHRG_STAT_RSN_CD,
						(SELECT EXTRNL_CSP_KEY FROM MBF_BIGDATA.ADMR_EXTERNAL_CSP WHERE EXTRNL_CSP_CD = 'VNMMO' and day_key = '$day_key') AS BLLG_OPRTR_KEY,
						'VNMMO' 												AS BLLG_OPRTR_CD,
						A.CELL_ID 												AS ORIGINAL_GCI_CD,
						CAST(NULL AS STRING) 									AS TESTNG_NBR_IND,
						cast(D.ADDR_LAT as decimal(27,8))						as ADDR_LAT,
						cast(D.ADDR_LON as decimal(27,8))						as ADDR_LON,
						D.CELL_KEY 											 	AS CELL_KEY,
						D.CELL_CD 												AS CELL_CD,
						D.CELL_SITE_KEY 										AS CELL_SITE_KEY,
						D.CELL_SITE_CD 											AS CELL_SITE_CD,
						D.NTWK_MGNT_CENTRE_KEY 									AS NTWK_MGNT_CENTRE_KEY,
						D.NTWK_MGNT_CENTRE_CD 									AS NTWK_MGNT_CENTRE_CD,
						D.BSNS_RGN_KEY 											AS BSNS_RGN_KEY,
						D.BSNS_RGN_CD 											AS BSNS_RGN_CD,
						D.BSNS_CLUSTER_KEY 										AS BSNS_CLUSTER_KEY,
						D.BSNS_CLUSTER_CD 										AS BSNS_CLUSTER_CD,
						D.BSNS_MINICLUSTER_KEY 									AS BSNS_MINICLUSTER_KEY,
						D.BSNS_MINICLUSTER_CD 									AS BSNS_MINICLUSTER_CD,
						D.GEO_CNTRY_KEY 										AS GEO_CNTRY_KEY,
						D.GEO_CNTRY_CD 											AS GEO_CNTRY_CD,
						D.GEO_STATE_KEY 										AS GEO_STATE_KEY,
						D.GEO_STATE_CD 											AS GEO_STATE_CD,
						D.GEO_DSTRCT_KEY 										AS GEO_DSTRCT_KEY,
						D.GEO_DSTRCT_CD 										AS GEO_DSTRCT_CD,
						D.GEO_CITY_KEY 											AS GEO_CITY_KEY,
						D.GEO_CITY_CD 											AS GEO_CITY_CD,
						C.ACQSTN_DT 											AS ACQSTN_DT,
						C.ACQSTN_BSNS_OUTLET_KEY 								AS ACQSTN_BSNS_OUTLET_KEY,
						C.ACQSTN_BSNS_OUTLET_CD 								AS ACQSTN_BSNS_OUTLET_CD,
						W1.WALLET_KEY	 										AS WALLET1_KEY,
						CAST(A.TK1_CONSUMED AS decimal(27,8))			     	AS WALLET1_BAL_INCRMNT_AMT,
						CAST(A.TK1_LIMIT_DATE AS TIMESTAMP)						AS WALLET1_BAL_INCRMNT_VALIDITY,
						W2.WALLET_KEY	  										AS WALLET2_KEY,
						CAST(A.TK2_CONSUMED AS decimal(27,8)) 					AS WALLET2_BAL_INCRMNT_AMT,
						CAST(A.TK2_LIMIT_DATE AS TIMESTAMP)						AS WALLET2_BAL_INCRMNT_VALIDITY,
						W3.WALLET_KEY	 										AS WALLET3_KEY,
						CAST(A.TK3_CONSUMED AS decimal(27,8)) 					AS WALLET3_BAL_INCRMNT_AMT,
						CAST(A.TK3_LIMIT_DATE AS TIMESTAMP)						AS WALLET3_BAL_INCRMNT_VALIDITY,
						W4.WALLET_KEY	 										AS WALLET4_KEY,
						CAST(A.TK4_CONSUMED AS decimal(27,8)) 					AS WALLET4_BAL_INCRMNT_AMT,
						CAST(A.TK4_LIMIT_DATE AS TIMESTAMP)						AS WALLET4_BAL_INCRMNT_VALIDITY,
						W5.WALLET_KEY	 										AS WALLET5_KEY,
						CAST(A.TK5_CONSUMED AS decimal(27,8)) 					AS WALLET5_BAL_INCRMNT_AMT,
						CAST(A.TK5_LIMIT_DATE AS TIMESTAMP)						AS WALLET5_BAL_INCRMNT_VALIDITY,
						W6.WALLET_KEY	 										AS WALLET6_KEY,
						CAST(A.TK6_CONSUMED AS decimal(27,8)) 					AS WALLET6_BAL_INCRMNT_AMT,
						CAST(A.TK6_LIMIT_DATE AS TIMESTAMP)						AS WALLET6_BAL_INCRMNT_VALIDITY,
						W7.WALLET_KEY	 										AS WALLET7_KEY,
						CAST(A.TK7_CONSUMED AS decimal(27,8)) 					AS WALLET7_BAL_INCRMNT_AMT,
						CAST(A.TK7_LIMIT_DATE AS TIMESTAMP)						AS WALLET7_BAL_INCRMNT_VALIDITY,
						W8.WALLET_KEY	 										AS WALLET8_KEY,
						CAST(A.TK8_CONSUMED AS decimal(27,8)) 					AS WALLET8_BAL_INCRMNT_AMT,
						CAST(A.TK8_LIMIT_DATE AS TIMESTAMP)						AS WALLET8_BAL_INCRMNT_VALIDITY,
						W9.WALLET_KEY	 										AS WALLET9_KEY,
						CAST(A.TK9_CONSUMED AS decimal(27,8)) 					AS WALLET9_BAL_INCRMNT_AMT,
						CAST(A.TK9_LIMIT_DATE AS TIMESTAMP)	 					AS WALLET9_BAL_INCRMNT_VALIDITY,
						W10.WALLET_KEY										 	AS WALLET10_KEY,
						CAST(A.TK10_CONSUMED AS decimal(27,8)) 					AS WALLET10_BAL_INCRMNT_AMT,
						CAST(A.TK10_LIMIT_DATE AS TIMESTAMP)					AS WALLET10_BAL_INCRMNT_VALIDITY,
						CAST(NULL AS STRING) 									AS CHARGING_REQUEST_INFO,
						CAST(NULL AS STRING) 									AS CHARGING_RESPONSE_INFO,
						C.LOYALTY_RANK_SCORE 									AS LOYALTY_RANK_SCORE,
						C.LOYALTY_SCORE_DT 										AS LOYALTY_SCORE_DT,
						C.CREDIT_SCORE 											AS CREDIT_SCORE,
						C.CREDIT_CLASS_CD 										AS CREDIT_CLASS_CD,
						C.CREDIT_SCORE_METHOD 									AS CREDIT_SCORE_METHOD,
						C.CREDIT_SCORE_DT 										AS CREDIT_SCORE_DT,
						C.RISK_IND 												AS RISK_IND,
						CAST(NULL AS STRING) 									AS ACCT_SEGMENT_CD,
						CAST(NULL AS string) 									AS ACCT_SEGMENT_DT,
						CAST(NULL AS STRING) 									AS FRAUD_RCHRG_IND,
						CAST(NULL AS bigint) 									AS FRAUD_RCHRG_CNT,
						CAST(NULL AS STRING) 									AS CMPGN_CD,
						6 														AS SRC_SYS_KEY,
						'ICC' 													AS SRC_SYS_CD,
						CURRENT_TIMESTAMP() 									AS LOAD_DT,
						(CASE WHEN A.SCRATCH_VALUE IS NULL THEN '0' ELSE '1' END ) AS CURR_IND,
						1 														AS WRHS_ID 
					FROM
					WALLET_RECHARGE_TMP A
					LEFT JOIN MBF_BIGDATA.ADMR_ACCOUNT_SERVICE C ON C.SERVICE_NBR = (CASE WHEN LENGTH(NVL(A.ORG_CALL_ID,'')) <> 0
																						THEN
																							CASE
																								WHEN SUBSTR(A.ORG_CALL_ID, 1, 4) = '0001'
																								THEN
																									SUBSTR(A.ORG_CALL_ID, 5)
																								ELSE
																									CAST(CAST(A.ORG_CALL_ID AS INT) AS STRING)
																							END
																						ELSE A.CALLING_ISDN_STD 	
																					 END)  AND C.DAY_KEY = '$day_key'
					LEFT JOIN MBF_BIGDATA.ADMR_CELL D ON D.CELL_KEY = A.CELL_ID AND D.DAY_KEY = '$day_key'
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w1 on w1.wallet_cbs_cd = lower(a.tk1) and w1.day_key = '$day_key'
					and w1.row_num1 = 1 
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w2 on w2.wallet_cbs_cd = lower(a.tk2) and w2.day_key = '$day_key'
					and w2.row_num1 = 1
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w3 on w3.wallet_cbs_cd = lower(a.tk3) and w3.day_key = '$day_key'
					and w3.row_num1 = 1 
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w4 on w4.wallet_cbs_cd = lower(a.tk4) and w4.day_key = '$day_key'
					and w4.row_num1 = 1
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w5 on w5.wallet_cbs_cd = lower(a.tk5) and w5.day_key = '$day_key'
					and w5.row_num1 = 1
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w6 on w6.wallet_cbs_cd = lower(a.tk6) and w6.day_key = '$day_key'
					and w6.row_num1 = 1
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w7 on w7.wallet_cbs_cd = lower(a.tk7) and w7.day_key = '$day_key'
					and w7.row_num1 = 1
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w8 on w8.wallet_cbs_cd = lower(a.tk8) and w8.day_key = '$day_key'
					and w8.row_num1 = 1
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w9 on w9.wallet_cbs_cd = lower(a.tk9) and w9.day_key = '$day_key'
					and w9.row_num1 = 1
					LEFT JOIN MBF_BIGDATA.ADMR_WALLET w10 on w10.wallet_cbs_cd = lower(a.tk10) and w10.day_key = '$day_key'
					and w10.row_num1 = 1 
					
					 ",
		"tempTable"  : "ADME_WALLET_RECHARGE_EDR_TMP",
		"countSourceRecord":"0"
	  }   	  
	]
}