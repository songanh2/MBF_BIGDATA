{
	 "description":"ADME_RATED_VAS_EDR",
	 "sqlStatements": [
	  {
		"sql"      	:"
			SELECT 

					CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss'),'yyyyMM') 	AS INTEGER) 		AS MO_KEY,
					CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss'),'HH') 		AS INTEGER) 		AS HOUR_KEY,
					cast(null as string) 		AS UUID	,
					cast(null as string) 		AS EVT_CD	,
					A.STT 						AS EVT_SEQ_NBR	,
					CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,'dd/MM/yyyy HH:mm:ss')) AS timestamp)	AS EVT_START_DT	,
					CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_END_TIME,'dd/MM/yyyy HH:mm:ss')) AS timestamp)	AS EVT_END_DT	,
					CAST(NULL AS TIMESTAMP) 	AS BLLG_START_DT	,
					A.FTP_FILENAME 				AS FILE_NAME	,
					CAST(NULL AS TIMESTAMP) 	AS 	FILE_DT	,
					CAST(NULL AS STRING) 		AS 	FILE_PREFIX_CD	,
					CAST(NULL AS TIMESTAMP) 	AS 	REC_PROCESS_DT	,
					CAST(NULL AS STRING) 		AS 	SWITCH_CD	,
					B.ACCT_SRVC_INSTANCE_KEY 	AS 	ACCT_SRVC_INSTANCE_KEY	,
					A.CALLING_ISDN_STD 			AS 	SERVICE_NBR	,
					B.ACCT_KEY 					AS 	ACCT_KEY	,
					B.BILLABLE_ACCT_KEY 		AS 	BILLABLE_ACCT_KEY	,
					B.CUST_KEY 					AS 	CUST_KEY	,
					B.CUST_TYP_CD 				AS 	CUST_TYP_CD	,
					B.NTWK_QOS_GRP_CD 			AS 	NTWK_QOS_GRP_CD	,
					B.ACTIVATION_DT 			AS 	ACCT_ACTIVATION_DT	,
					B.CBS_ACTIVATION_DT 		AS 	ACCT_CBS_ACTIVATION_DT	,
					B.LFCYCL_STAT_CD 			AS 	ACCT_LFCYCL_STAT_CD	,
					B.ACTIVATION_DT 			AS 	SRVC_ACTIVATION_DT	,
					B.CBS_ACTIVATION_DT 		AS 	SRVC_CBS_ACTIVATION_DT	,
					B.LFCYCL_STAT_CD 			AS 	SRVC_LFCYCL_STAT_CD	,
					B.PROD_LINE_KEY 			AS 	PROD_LINE_KEY	,
					B.USAGE_PLAN_KEY 			AS 	USAGE_PLAN_KEY	,
					B.USAGE_PLAN_CD 			AS 	USAGE_PLAN_CD	,
					B.USAGE_PLAN_TYP_CD 		AS 	USAGE_PLAN_TYP_CD	,
					B.CRM_OFFER_KEY 			AS 	OFFER_KEY	,
					B.CRM_OFFER_CD 				AS 	OFFER_CD	,
					CAST(NULL AS DECIMAL(20,0))	AS PROD_KEY	,
					CAST(NULL AS STRING)		AS PROD_CD	,
					'VAS' 						AS EVT_CLASS_CD	,
					NVL(A.EVT_CTGRY_CD,'UNKNOWN') 	AS EVT_CTGRY_CD	,
					NVL(A.CALL_TYP_CD,'UNKNOWN')  	AS EVT_TYP_CD	,
					'VAS' 							AS USAGE_TYP_CD	,
					NVL(A.CALL_CTGRY_CD,'UNKNOWN') 	AS CALL_CTGRY_CD	,
					NVL(A.CALL_TYP_CD,'UNKNOWN')  	AS CALL_TYP_CD	,
					CAST(NULL AS STRING)		AS EVT_STAT_CD	,
					CAST(NULL AS STRING)		AS EVT_TMNT_RSN_CD	,
					CAST(NULL AS STRING)		AS BLLG_STAT_CD	,
					CAST(NULL AS STRING)		AS BLLG_STAT_RSN_CD	,
					CAST(NULL AS bigint)		AS BLLG_OPRTR_KEY	,
					CAST(NULL AS STRING)		AS BLLG_OPRTR_CD	,
					CAST(NULL AS decimal(30,0))	AS CONTENT_KEY	,
					CAST(NULL AS STRING)		AS CONTENT_CD	,
					CAST(NULL AS STRING)		AS CONTENT_TYP_CD	,
					CAST(NULL AS STRING)		AS CONTENT_CATEGORY_CD	,
					CAST(NULL AS STRING)		AS MEDIA_TYP_CD	,
					CAST(NULL AS STRING)		AS CONTENT_NAME	,
					CAST(NULL AS bigint)		AS CONTENT_PROVIDER_ORG_KEY	,
					CAST(NULL AS STRING)		AS CONTENT_PROVIDER_ORG_CD	,
					CAST(NULL AS STRING)		AS CONTENT_PROVIDER_NAME	,
					CAST(NULL AS STRING)		AS LANG_CD	,
					CAST(NULL AS STRING)		AS SHORT_CD	,
					CAST(NULL AS STRING)		AS CP_ID	,
					CAST(NULL AS STRING)		AS PROMOTION_CD	,
					CAST(NULL AS STRING)		AS MIGRATION_IND	,
					CAST(NULL AS decimal(20,0))	AS PREV_PROD_KEY	,
					CAST(NULL AS STRING)		AS PREV_PROD_CD	,
					CAST(NULL AS decimal(30,0))	AS PREV_CONTENT_KEY	,
					CAST(NULL AS STRING)		AS PREV_CONTENT_CD	,
					CAST(NULL AS timestamp)		AS LAST_CHARING_DT	,
					CAST(NULL AS timestamp)		AS NEXT_CHARGING_DT	,
					CAST(NULL AS STRING)		AS CHARGING_REQUEST_INFO	,
					CAST(NULL AS STRING)		AS CHARGING_RESPONSE_INFO	,
					CAST(NULL AS STRING)		AS ACTVTN_RESPONSE_INFO	,
					CAST(NULL AS STRING)		AS ACTVTN_CHANNEL_CD	,
					CAST(NULL AS timestamp)		AS ACTVTN_DT	,
					CAST(NULL AS timestamp)		AS FIRST_TIME_ACTVTN_DT	,
					A.CALLING_ISDN_STD 			AS ORIGNTNG_NBR	,
					A.IMSI 						AS ORIGNTNG_IMSI	,
					CAST(NULL AS STRING)		AS ORIGNTNG_IMEI	,
					'0' 						AS TESTNG_NBR_IND	,
					CAST(NULL AS STRING)		AS ORIGNTNG_PLMN_CD	,
					CAST(NULL AS STRING)		AS ORIGNTNG_NETWORK_TYP	,
					SUBSTRING(A.IMSI,1,3) 		AS ORIGNTNG_HOME_COUNTRY_CD	,
					CAST(NULL AS STRING) 		AS ORIGNTNG_HOME_AREA_CD		,
					SUBSTRING(A.IMSI,4,2) 		AS ORIGNTNG_HOME_NETWORK_CD ,
					(CASE WHEN A.IMSI NOT LIKE '452%' OR A.IMSI NOT LIKE '45201%' THEN SUBSTRING(A.IMSI,1,3) ELSE CAST(NULL AS STRING) END) 	 	AS ORIGNTNG_ROAM_COUNTRY_CD,
					CAST(NULL AS STRING) 		AS ORIGNTNG_ROAM_AREA_CD,
					(CASE WHEN A.IMSI NOT LIKE '452%' OR A.IMSI NOT LIKE '45201%' THEN SUBSTRING(A.IMSI,4,2) ELSE CAST(NULL AS STRING) END)			AS ORIGNTNG_ROAM_NETWORK_CD,
					CAST(NULL AS STRING)		AS CCN_SCP_REF_CD	,
					CAST(NULL AS STRING)		AS IN_SCP_REF_CD	,
					CAST(NULL AS STRING)		AS ONNET_IND	,
					(CASE WHEN A.IMSI NOT LIKE '45201%' THEN '1' ELSE CAST(NULL AS STRING) END) AS ROAMING_IND	,
					CAST(NULL AS STRING)		AS SBRP_TYP_CD	,
					CAST(NULL AS integer)		AS SBRP_VLDT_PERIOD_DAYS	,
					CAST(NULL AS STRING)		AS RENEWAL_IND	,
					CAST(NULL AS timestamp)		AS LAST_RENEWED_DT	,
					CAST(NULL AS timestamp)		AS NEXT_RENEW_DT	,
					CAST(NULL AS timestamp)		AS SBRP_START_DT	,
					CAST(NULL AS timestamp)		AS SBRP_STOP_DT	,
					CAST(NULL AS STRING)		AS SBRP_STAT_CD	,
					CAST(NULL AS decimal(27,8))		AS SBRP_RC_AMT	,
					CAST(NULL AS decimal(27,8))		AS SBRP_NRC_AMT	,
					CAST(NULL AS decimal(10,4))		AS CP_RVN_SHARE_PCT	,
					CAST(NULL AS decimal(10,4))		AS CSP_RVN_SHARE_PCT	,
					CAST(NULL AS STRING)		AS ORIGNTNG_GCI_CD	,
					CAST(C.ADDR_LAT	AS decimal(27,8))				AS ADDR_LAT				,
					CAST(C.ADDR_LON	AS decimal(27,8))				AS ADDR_LON				,
					C.CELL_KEY					AS CELL_KEY				,
					C.CELL_CD					AS CELL_CD						,
					C.CELL_SITE_KEY				AS CELL_SITE_KEY			,
					C.CELL_SITE_CD				AS CELL_SITE_CD			,
					C.NTWK_MGNT_CENTRE_KEY		AS NTWK_MGNT_CENTRE_KEY	,
					C.NTWK_MGNT_CENTRE_CD		AS NTWK_MGNT_CENTRE_CD			,
					C.BSNS_RGN_KEY				AS BSNS_RGN_KEY			,
					C.BSNS_RGN_CD				AS BSNS_RGN_CD					,
					C.BSNS_CLUSTER_KEY			AS BSNS_CLUSTER_KEY		,
					C.BSNS_CLUSTER_CD			AS BSNS_CLUSTER_CD				,
					C.BSNS_MINICLUSTER_KEY		AS BSNS_MINICLUSTER_KEY	,
					C.BSNS_MINICLUSTER_CD		AS BSNS_MINICLUSTER_CD			,
					C.GEO_CNTRY_KEY				AS GEO_CNTRY_KEY			,
					C.GEO_CNTRY_CD				AS GEO_CNTRY_CD			,
					C.GEO_STATE_KEY				AS GEO_STATE_KEY			,
					C.GEO_STATE_CD				AS GEO_STATE_CD			,
					C.GEO_DSTRCT_KEY			AS GEO_DSTRCT_KEY				,
					C.GEO_DSTRCT_CD				AS GEO_DSTRCT_CD			,
					C.GEO_CITY_KEY				AS GEO_CITY_KEY			,
					C.GEO_CITY_CD				AS GEO_CITY_CD					,
					B.ACQSTN_DT					AS ACQSTN_DT					,
					B.ACQSTN_BSNS_OUTLET_KEY 	AS ACQSTN_BSNS_OUTLET_KEY		,
					B.ACQSTN_BSNS_OUTLET_CD	 	AS ACQSTN_BSNS_OUTLET_CD		,
					CAST(NULL AS STRING)		AS BILL_GRP_CD	,
					CAST(NULL AS bigint)		AS BILL_CYCLE_KEY	,
					CAST(NULL AS integer)		AS CHRG_HEAD_KEY	,
					CAST(NULL AS STRING)		AS CHRG_HEAD_CD	,
					'VND'  						AS CRNCY_CD	,
					A.USED_DURATION  			AS DRTN	,
					CAST(NULL AS bigint)		AS RTD_DRTN	,
					CAST(NULL AS bigint)		AS FREE_DRTN	,
					CAST(NULL AS bigint)		AS CHRGD_DRTN	,
					CAST(NULL AS bigint)		AS INTCONN_DRTN	,
					CAST(NULL AS bigint)		AS TOT_FLUX	,
					CAST(NULL AS bigint)		AS UP_FLUX	,
					CAST(NULL AS bigint)		AS DOWN_FLUX	,
					CAST(NULL AS STRING)		AS FLUX_UOM_CD	,
					CAST(NULL AS bigint)		AS RTD_USG	,
					CAST(NULL AS bigint)		AS FREE_USG	,
					CAST(NULL AS bigint)		AS CHRGBL_USG	,
					CAST(NULL AS bigint)		AS INTCONN_USG	,
					CAST(NULL AS STRING)		AS CHRGNG_PRTY_IND	,
					CAST(NULL AS STRING)		AS OTHR_CHRGNG_NBR	,
					CAST(NULL AS STRING)		AS CHRGNG_IND	,
					CAST(NULL AS STRING)		AS CHRGING_ZONE_CD	,
					CAST(NULL AS STRING)		AS RTD_CLASS_CD	,
					CAST(NULL AS STRING)		AS RTNG_INFO	,
					CAST((CASE WHEN A.ACC_PROFILE NOT LIKE 'TS%' THEN A.CREDIT_CHARGED ELSE 0 END) AS decimal(27,8)) AS PREPAID_MAIN_ACCT_DECRMNT_AMT	,
					CAST((CASE WHEN A.ACC_PROFILE LIKE 'TS%' THEN A.CREDIT_CHARGED ELSE 0 END) AS decimal(27,8)) AS POSTPAID_MAIN_ACCT_DECRMNT_AMT	,
					CAST(NULL AS decimal(27,8))		AS MAIN_ACCT_BAL_AMT_BEFR_IMPACT	,
					CAST(NULL AS decimal(27,8))		AS MAIN_ACCT_BAL_AMT_AFTR_IMPACT	,
					CAST(NULL AS decimal(27,8))		AS CHRGD_AMT	,
					CAST(NULL AS decimal(27,8))		AS MARK_UP_AMT	,
					CAST(	
						(case when w1.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk1_consumed else 0 end) + 
						(case when w2.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk2_consumed else 0 end) + 
						(case when w3.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk3_consumed else 0 end) + 
						(case when w4.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk4_consumed else 0 end) + 
						(case when w5.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk5_consumed else 0 end) + 
						(case when w6.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk6_consumed else 0 end) + 
						(case when w7.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk7_consumed else 0 end) + 
						(case when w8.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk8_consumed else 0 end) + 
						(case when w9.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk9_consumed else 0 end) + 
						(case when w10.wallet_typ_cd IN('SECONDARY_MAIN_BALANCE') then a.tk10_consumed else 0 end) 
					AS decimal(27,8)) 		AS DISCOUNT_AMT	,
					CAST(NULL AS decimal(27,8))		AS TAX_AMT	,
					CAST(	 
						A.CREDIT_CHARGED + 
						(case when w1.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk1_consumed else 0 end) + 
						(case when w2.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk2_consumed else 0 end) + 
						(case when w3.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk3_consumed else 0 end) + 
						(case when w4.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk4_consumed else 0 end) + 
						(case when w5.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk5_consumed else 0 end) + 
						(case when w6.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk6_consumed else 0 end) + 
						(case when w7.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk7_consumed else 0 end) + 
						(case when w8.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk8_consumed else 0 end) + 
						(case when w9.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk9_consumed else 0 end) + 
						(case when w10.wallet_typ_cd IN('MAIN_BALANCE','SECONDARY_MAIN_BALANCE') then a.tk10_consumed else 0 end) 
					AS decimal(27,8)) 						AS BLLD_AMT,
					CAST(A.CREDIT_CHARGED AS decimal(27,8)) AS  RVN_AMT,
					CAST(NULL AS decimal(27,8))		AS REFUND_AMT	,
					CAST(NULL AS decimal(27,8))		AS ECB_REFUND_AMT	,
					CAST(NULL AS decimal(27,8))		AS INTERNAL_COST_AMT	,
					CAST(NULL AS decimal(27,8))		AS INTCONN_COST_AMT	,
					CAST(NULL AS decimal(27,8))		AS INTCONN_RVN_AMT	,
					CAST(NULL AS decimal(27,8))		AS BONUS_DISC_REWARD_AMT	,
					CAST(NULL AS bigint)		AS BONUS_UNIT_CREDIT_REWARD_AMT	,
					CAST(A.CREDIT_CHARGED 		AS 	decimal(27,8)) AS  AMAIN_ACCT_RVN_AMT,
					CAST(NULL AS decimal(27,8))		AS ECB_RVN_AMT	,
					CAST(NULL AS bigint)		AS ECB_USG	,
					CAST(NULL AS decimal(27,8))		AS ECB_TAX_AMT	,
					CAST(W1.WALLET_KEY 			AS BIGINT) 			AS WALLET1_KEY,
					CAST(A.TK1_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET1_BAL_DECRMNT_AMT,
					CAST(W2.WALLET_KEY 			AS BIGINT) 			AS WALLET2_KEY,
					CAST(A.TK2_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET2_BAL_DECRMNT_AMT,
					CAST(W3.WALLET_KEY 			AS BIGINT) 			AS WALLET3_KEY,
					CAST(A.TK3_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET3_BAL_DECRMNT_AMT,
					CAST(W4.WALLET_KEY 			AS BIGINT) 			AS WALLET4_KEY,
					CAST(A.TK4_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET4_BAL_DECRMNT_AMT,
					CAST(W5.WALLET_KEY 			AS BIGINT) 			AS WALLET5_KEY,
					CAST(A.TK5_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET5_BAL_DECRMNT_AMT,
					CAST(W6.WALLET_KEY 			AS BIGINT) 			AS WALLET6_KEY,
					CAST(A.TK6_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET6_BAL_DECRMNT_AMT,
					CAST(W7.WALLET_KEY 			AS BIGINT) 			AS WALLET7_KEY,
					CAST(A.TK7_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET7_BAL_DECRMNT_AMT,
					CAST(W8.WALLET_KEY 			AS BIGINT) 			AS WALLET8_KEY,
					CAST(A.TK8_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET8_BAL_DECRMNT_AMT,
					CAST(W9.WALLET_KEY 			AS BIGINT) 			AS WALLET9_KEY,
					CAST(A.TK9_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET9_BAL_DECRMNT_AMT,
					CAST(W10.WALLET_KEY 		AS BIGINT) 			AS WALLET10_KEY,
					CAST(A.TK10_CONSUMED 		AS DECIMAL(27,8)) 	AS WALLET10_BAL_DECRMNT_AMT,
					B.LOYALTY_RANK_SCORE		AS LOYALTY_RANK_SCORE	,
					B.LOYALTY_SCORE_DT			AS LOYALTY_SCORE_DT	 ,
					B.CREDIT_SCORE				AS CREDIT_SCORE		 ,
					B.CREDIT_CLASS_CD			AS CREDIT_CLASS_CD		,
					B.CREDIT_SCORE_METHOD		AS CREDIT_SCORE_METHOD	,
					B.CREDIT_SCORE_DT			AS CREDIT_SCORE_DT		,
					B.RISK_IND					AS RISK_IND			,
					CAST(NULL AS STRING)		AS ACCT_SEGMENT_CD	,
					CAST(NULL AS STRING)		AS ACCT_SEGMENT_DT	,
					CAST(NULL AS STRING)		AS CMPGN_CD	,
					CAST(6 AS BIGINT) 			AS SRC_SYS_KEY	,
					'ICC' 						AS SRC_SYS_CD	,
					CURRENT_TIMESTAMP() 		AS LOAD_DT	,
					'1' 						AS CURR_IND,
					1 							AS WRHS_ID
			FROM
			MBF_STAGE.STG_CDR_IN_ENRICH A 
			LEFT JOIN MBF_BIGDATA.ADMR_ACCOUNT_SERVICE B ON A.CALLING_ISDN_STD = B.SERVICE_NBR AND B.DAY_KEY = '$day_key'
			LEFT JOIN MBF_BIGDATA.ADMR_CELL C ON A.CELL_ID = C.CELL_GCI_CD AND C.DAY_KEY = '$day_key'
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W1 ON W1.WALLET_CBS_CD = LOWER(A.TK1) AND W1.DAY_KEY = '$day_key'
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W1.ROW_NUM1 = 1)  OR (W1.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W1.ROW_NUM = 1) OR (W1.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W1.ROW_NUM = 1))		
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W2 ON W2.WALLET_CBS_CD = LOWER(A.TK2)  AND W2.DAY_KEY = '$day_key'
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W2.ROW_NUM1 = 1)  OR (W2.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W2.ROW_NUM = 1) OR (W2.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W2.ROW_NUM = 1))		
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W3 ON W3.WALLET_CBS_CD = LOWER(A.TK3)  AND W3.DAY_KEY = '$day_key'
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W3.ROW_NUM1 = 1)  OR (W3.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W3.ROW_NUM = 1) OR (W3.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W3.ROW_NUM = 1))		
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W4 ON W4.WALLET_CBS_CD = LOWER(A.TK4)  AND W4.DAY_KEY = '$day_key'	
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W4.ROW_NUM1 = 1)  OR (W4.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W4.ROW_NUM = 1) OR (W4.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W4.ROW_NUM = 1))			
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W5 ON W5.WALLET_CBS_CD = LOWER(A.TK5) AND W5.DAY_KEY = '$day_key'			
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W5.ROW_NUM1 = 1)  OR (W5.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W5.ROW_NUM = 1) OR (W5.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W5.ROW_NUM = 1))
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W6 ON W6.WALLET_CBS_CD = LOWER(A.TK6) AND W6.DAY_KEY = '$day_key'	
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W6.ROW_NUM1 = 1)  OR (W6.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W6.ROW_NUM = 1) OR (W6.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W6.ROW_NUM = 1))		
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W7 ON W7.WALLET_CBS_CD = LOWER(A.TK7) AND W7.DAY_KEY = '$day_key'
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W7.ROW_NUM1 = 1)  OR (W7.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W7.ROW_NUM = 1) OR (W7.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W7.ROW_NUM = 1))			
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W8 ON W8.WALLET_CBS_CD = LOWER(A.TK8)  AND W8.DAY_KEY = '$day_key'
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W8.ROW_NUM1 = 1)  OR (W8.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W8.ROW_NUM = 1) OR (W8.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W8.ROW_NUM = 1))			
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W9 ON W9.WALLET_CBS_CD = LOWER(A.TK9)  AND W9.DAY_KEY = '$day_key'
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W9.ROW_NUM1 = 1)  OR (W9.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W9.ROW_NUM = 1) OR (W9.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W9.ROW_NUM = 1))			
			LEFT JOIN MBF_BIGDATA.ADMR_WALLET W10 ON W10.WALLET_CBS_CD = LOWER(A.TK10)  AND W10.DAY_KEY = '$day_key'
			AND ((A.CALL_TYPE_IND IN ('OTHER','UNKNOWN') AND W10.ROW_NUM1 = 1)  OR (W10.USAGE_TYP_CD IN ('CONVERGENT','VOICE') AND A.CALL_TYPE_IND IN ('IC','OG') AND W10.ROW_NUM = 1) OR (W10.USAGE_TYP_CD IN ('CONVERGENT','SMS') AND A.CALL_TYPE_IND = 'SMO' AND W10.ROW_NUM = 1))		
			WHERE ((A.CALL_TYPE_IND = 'SMO' AND A.CALL_TYPE = 21 AND LENGTH(A.CALLED_ISDN)<10)
			OR	  (A.CALL_TYPE_IND = 'OG' AND CALL_TYPE = 1 AND ( A.called_isdn LIKE '041900%'
															OR A.called_isdn LIKE '1900%'
															OR A.called_isdn LIKE '041800%'
															OR A.called_isdn LIKE '1800%'))
			OR 	  (A.CALL_TYPE_IND = 'OTHER' AND A.CALL_TYPE IN (184, 186))) and A.DAY_KEY = '$day_key'
		",
		"tempTable"  : "ADME_RATED_VAS_EDR_TMP",
		"countSourceRecord":"0"
	  }   	  
	]
}