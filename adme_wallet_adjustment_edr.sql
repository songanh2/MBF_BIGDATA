{
	 "description":"ADME_WALLET_ADJUSTMENT_EDR",
	 "sqlStatements": [
	  {
		"sql"      : "
						SELECT 
							A.*
						FROM (
							SELECT 
								A.*,																								
								TK_BONUS.TK TK 
							FROM (
								SELECT 
									CALL_STA_TIME,
									CALL_END_TIME,
									FTP_FILENAME,
									CASE WHEN LENGTH(NVL(ORG_CALL_ID,'')) <> 0
										  THEN
										   CASE
											 WHEN SUBSTR(ORG_CALL_ID, 1, 4) = '0001'
											 THEN
											   SUBSTR(ORG_CALL_ID, 5)
											 ELSE
											   CAST(CAST(ORG_CALL_ID AS INT) AS STRING)
										   END
										 WHEN EVT_DRCTN_CD = 'I' THEN CALLED_ISDN_STD
										 ELSE CALLING_ISDN_STD
									END AS CALLING_ISDN_STD,									
									CALL_TYPE_IND,
									CALL_TYPE,
									SCRATCH_VALUE,
									EVT_CTGRY_CD,							
									CALL_CTGRY_CD,
									CALL_TYP_CD,										
									TK1,TK2,TK3,TK4,TK5,TK6,TK7,TK8,TK9,TK10,
									TK1_CONSUMED,TK2_CONSUMED,TK3_CONSUMED,TK4_CONSUMED,TK5_CONSUMED,TK6_CONSUMED,TK7_CONSUMED,TK8_CONSUMED,TK9_CONSUMED,TK10_CONSUMED,
									TK1_INITIAL,TK2_INITIAL,TK3_INITIAL,TK4_INITIAL,TK5_INITIAL,TK6_INITIAL,TK7_INITIAL,TK8_INITIAL,TK9_INITIAL,TK10_INITIAL,
									TK1_REMAINING,TK2_REMAINING,TK3_REMAINING,TK4_REMAINING,TK5_REMAINING,TK6_REMAINING,TK7_REMAINING,TK8_REMAINING,TK9_REMAINING,TK10_REMAINING,
									TK1_LIMIT_DATE,TK2_LIMIT_DATE,TK3_LIMIT_DATE,TK4_LIMIT_DATE,TK5_LIMIT_DATE,TK6_LIMIT_DATE,TK7_LIMIT_DATE,TK8_LIMIT_DATE,TK9_LIMIT_DATE,TK10_LIMIT_DATE,
									CELL_ID,
									IMSI,
									'CREDIT_CHARGE' AS TK11,
									CREDIT_BEFORE_ADJUSTMENT AS TK11_INITIAL,
									CREDIT_CHARGED AS TK11_CONSUMED,
									CREDIT_REMAINING AS TK11_REMAINING 
							FROM MBF_STAGE.STG_CDR_IN_ENRICH
							WHERE DAY_KEY = '$day_key' AND CALL_TYPE IN(415,416)) A
							LATERAL VIEW EXPLODE(ARRAY(						
													CONCAT_WS(':',NVL(TK1,''),CAST(NVL(TK1_CONSUMED,'') AS STRING),CAST(NVL(TK1_INITIAL,'') AS STRING),CAST(NVL(TK1_REMAINING,'') AS STRING), CAST(NVL(TK1_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK2,''),CAST(NVL(TK2_CONSUMED,'') AS STRING),CAST(NVL(TK2_INITIAL,'') AS STRING),CAST(NVL(TK2_REMAINING,'') AS STRING), CAST(NVL(TK2_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK3,''),CAST(NVL(TK3_CONSUMED,'') AS STRING),CAST(NVL(TK3_INITIAL,'') AS STRING),CAST(NVL(TK3_REMAINING,'') AS STRING), CAST(NVL(TK3_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK4,''),CAST(NVL(TK4_CONSUMED,'') AS STRING),CAST(NVL(TK4_INITIAL,'') AS STRING),CAST(NVL(TK4_REMAINING,'') AS STRING), CAST(NVL(TK4_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK5,''),CAST(NVL(TK5_CONSUMED,'') AS STRING),CAST(NVL(TK5_INITIAL,'') AS STRING),CAST(NVL(TK5_REMAINING,'') AS STRING), CAST(NVL(TK5_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK6,''),CAST(NVL(TK6_CONSUMED,'') AS STRING),CAST(NVL(TK6_INITIAL,'') AS STRING),CAST(NVL(TK6_REMAINING,'') AS STRING), CAST(NVL(TK6_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK7,''),CAST(NVL(TK7_CONSUMED,'') AS STRING),CAST(NVL(TK7_INITIAL,'') AS STRING),CAST(NVL(TK7_REMAINING,'') AS STRING), CAST(NVL(TK7_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK8,''),CAST(NVL(TK8_CONSUMED,'') AS STRING),CAST(NVL(TK8_INITIAL,'') AS STRING),CAST(NVL(TK8_REMAINING,'') AS STRING), CAST(NVL(TK8_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK9,''),CAST(NVL(TK9_CONSUMED,'') AS STRING),CAST(NVL(TK9_INITIAL,'') AS STRING),CAST(NVL(TK9_REMAINING,'') AS STRING), CAST(NVL(TK9_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK10,''),CAST(NVL(TK10_CONSUMED,'') AS STRING),CAST(NVL(TK10_INITIAL,'') AS STRING),CAST(NVL(TK10_REMAINING,'') AS STRING), CAST(NVL(TK10_LIMIT_DATE,'') AS STRING)),
													CONCAT_WS(':',NVL(TK11,''),CAST(NVL(TK11_CONSUMED,'') AS STRING),CAST(NVL(TK11_INITIAL,'') AS STRING),CAST(NVL(TK11_REMAINING,'') AS STRING), CAST(NULL AS STRING))
												)) TK_BONUS AS TK) A
							WHERE CAST(SPLIT(A.TK,':')[1] AS BIGINT) > 0		       
					",
		"tempTable" : "ADME_WALLET_ADJUSTMENT_EDR_TMP",
		"countSourceRecord" : "0"
	  },	 
	  {
		"sql"      : "
						SELECT
							CAST (FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,
							'dd/MM/yyyy HH:mm:ss'),
							'yyyyMM') AS STRING) AS MO_KEY ,
							CAST (FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,
							'dd/MM/yyyy HH:mm:ss'),
							'HH') AS STRING) AS HOUR_KEY ,
							CAST(NULL AS STRING) AS UUID,
							CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_STA_TIME,
							'dd/MM/yyyy HH:mm:ss'),
							'yyyy-MM-dd HH:mm:ss') AS TIMESTAMP) AS ADJUSTMENT_DT,
							CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(A.CALL_END_TIME,
							'dd/MM/yyyy HH:mm:ss'),
							'yyyy-MM-dd HH:mm:ss') AS TIMESTAMP) AS BLLG_START_DT,
							A.FTP_FILENAME FILE_NAME,
							CAST(NULL AS TIMESTAMP) AS FILE_DT,
							CAST(NULL AS STRING) AS FILE_PREFIX_CD,
							CAST(NULL AS TIMESTAMP) AS REC_PROCESS_DT,
							CAST(NULL AS STRING) AS SWITCH_CD,
							B.ACCT_SRVC_INSTANCE_KEY,
							A.CALLING_ISDN_STD SERVICE_NBR,
							B.ACCT_KEY,
							B.BILLABLE_ACCT_KEY,
							B.CUST_KEY,
							B.CUST_TYP_CD,
							CAST(NULL AS STRING) AS NTWK_QOS_GRP_CD,
							B.ACTIVATION_DT AS ACCT_ACTIVATION_DT,
							B.CBS_ACTIVATION_DT AS ACCT_CBS_ACTIVATION_DT,
							B.LFCYCL_STAT_CD AS ACCT_LFCYCL_STAT_CD,
							CAST(NULL AS TIMESTAMP) AS SRVC_ACTIVATION_DT,
							CAST(NULL AS TIMESTAMP) AS SRVC_CBS_ACTIVATION_DT,
							CAST(NULL AS STRING) AS SRVC_LFCYCL_STAT_CD,
							B.PROD_LINE_KEY,
							B.USAGE_PLAN_KEY,
							B.USAGE_PLAN_CD,
							B.USAGE_PLAN_TYP_CD,
							B.CRM_OFFER_KEY AS OFFER_KEY,
							B.CRM_OFFER_CD AS OFFER_CD,
							CAST(NULL AS DECIMAL(20,0)) AS PROD_KEY,
							CAST(NULL AS STRING) 							AS PROD_CD,							
							'UNKNOWN'									 	AS EVT_CLASS_CD,
							A.EVT_CTGRY_CD 									AS EVT_CTGRY_CD,
							A.CALL_TYP_CD 									AS EVT_TYP_CD,
							'UNKNOWN'  									 	AS USAGE_TYP_CD,	
							CAST(NULL AS STRING) AS BILL_GRP_CD,
							CAST(NULL AS BIGINT) AS BILL_CYCLE_KEY,
							CAST(NULL AS INTEGER) AS CHRG_HEAD_KEY,
							CAST(NULL AS STRING) AS CHRG_HEAD_CD,
							CAST(NULL AS STRING) AS BLLG_STAT_RSN_CD,
							W.WALLET_KEY,
							W.WALLET_CD,
							W.WALLET_TYP_CD,
							W.UOM_CD AS WALLET_UOM_CD,
							CAST(NULL AS INTEGER) AS WALLET_ADJUSTMENT_TYP,
							CAST(CASE WHEN SPLIT(A.TK,':')[1] <> '' THEN SPLIT(A.TK,':')[1] ELSE 0  END AS DECIMAL(27,8)) AS WALLET_ADJUSTMENT_AMT,
							CAST(CASE WHEN SPLIT(A.TK,':')[2] <> '' THEN SPLIT(A.TK,':')[2] ELSE 0  END AS DECIMAL(27,8)) AS WALLET_BAL_VALUE_BEFR_IMPACT,
							CAST(CASE WHEN SPLIT(A.TK,':')[3] <> '' THEN SPLIT(A.TK,':')[3] ELSE 0  END AS DECIMAL(27,8)) AS WALLET_BAL_VALUE_AFTR_IMPACT,
							CAST(NULL AS TIMESTAMP) AS WALLET_VLD_TO_DT_BEFOR_IMPACT,
							CAST(FROM_UNIXTIME(UNIX_TIMESTAMP(SPLIT(A.TK,':')[4],'dd/MM/yyyy HH:mm:ss'),'yyyy-MM-dd HH:mm:ss') AS TIMESTAMP) AS WALLET_VLD_TO_DT_AFTR_IMPACT,
							CAST(NULL AS string) AS WALLET_ADJUSTMENT_RSN_CD,
							CAST(NULL AS string) AS PROMO_INFO,
							CAST(C.ADDR_LAT AS DECIMAL(27,8)) AS ADDR_LAT,
							CAST(C.ADDR_LON AS DECIMAL(27,8)) AS ADDR_LON,
							C.CELL_KEY,
							C.CELL_CD,
							C.CELL_SITE_KEY,
							C.CELL_SITE_CD,
							C.NTWK_MGNT_CENTRE_KEY,
							C.NTWK_MGNT_CENTRE_CD,
							C.BSNS_RGN_KEY,
							C.BSNS_RGN_CD,
							C.BSNS_CLUSTER_KEY,
							C.BSNS_CLUSTER_CD,
							C.BSNS_MINICLUSTER_KEY,
							C.BSNS_MINICLUSTER_CD,
							C.GEO_CNTRY_KEY,
							C.GEO_CNTRY_CD,
							C.GEO_STATE_KEY,
							C.GEO_STATE_CD,
							C.GEO_DSTRCT_KEY,
							C.GEO_DSTRCT_CD,
							C.GEO_CITY_KEY,
							C.GEO_CITY_CD,
							B.ACQSTN_DT,
							B.ACQSTN_BSNS_OUTLET_KEY,
							B.ACQSTN_BSNS_OUTLET_CD,
							B.LOYALTY_RANK_SCORE,
							CAST(NULL AS TIMESTAMP) AS LOYALTY_SCORE_DT,
							B.CREDIT_SCORE,
							B.CREDIT_CLASS_CD,
							B.CREDIT_SCORE_METHOD,
							B.CREDIT_SCORE_DT,
							B.RISK_IND,
							CAST(NULL AS STRING) AS ACCT_SEGMENT_CD,
							CAST(NULL AS STRING) AS ACCT_SEGMENT_DT,
							CAST(NULL AS STRING) AS CMPGN_CD,
							CAST(6 AS BIGINT) AS SRC_SYS_KEY,
							'ICC' AS SRC_SYS_CD,
							CURRENT_TIMESTAMP() AS LOAD_DT,
							'1' CURR_IND,
							1 WRHS_ID
						FROM
							ADME_WALLET_ADJUSTMENT_EDR_TMP A
						LEFT JOIN MBF_BIGDATA.ADMR_ACCOUNT_SERVICE B ON
							A.CALLING_ISDN_STD = B.SERVICE_NBR
							AND B.DAY_KEY = '$day_key'
						LEFT JOIN MBF_BIGDATA.ADMR_CELL C ON
							A.CELL_ID = C.CELL_GCI_CD
							AND C.DAY_KEY = '$day_key'
						LEFT JOIN (SELECT * FROM MBF_BIGDATA.ADMR_EXTERNAL_CSP WHERE DAY_KEY = '$day_key') D ON SUBSTRING(A.IMSI, 0, 3) = D.MCC_CD
						LEFT JOIN (SELECT * FROM MBF_BIGDATA.ADMR_WALLET WHERE DAY_KEY = '$day_key') W ON
						LOWER(W.WALLET_CBS_CD) = LOWER(SPLIT(A.TK, ':')[0])
						AND (
							(A.CALL_TYPE_IND IN ('OTHER', 'UNKNOWN') AND W.ROW_NUM1 = 1)
							OR (W.USAGE_TYP_CD IN ('VOICE' , 'CONVERGENT') AND A.CALL_TYPE_IND IN ('IC', 'OG') and w.ROW_NUM = 1)
							OR (W.USAGE_TYP_CD IN ('SMS' , 'CONVERGENT') AND A.CALL_TYPE_IND = 'SMO' AND W.ROW_NUM = 1)
							OR (W.USAGE_TYP_CD IN ('DATA' , 'CONVERGENT') AND A.CALL_TYPE_IND = 'GPRS' AND W.ROW_NUM = 1)
							)
					",
		"tempTable" : "",
		"countSourceRecord" : "0"
	  }
	]
}